# msa-rabbitmq PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: msa-rabbitmq-pvc
  labels:
    app: msa-rabbitmq-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
# msa-rabbitmq Service
apiVersion: v1
kind: Service
metadata:
  name: msa-rabbitmq
  labels:
    app: msa-rabbitmq
spec:
  type: LoadBalancer # 대시보드 접근용
  ports:
  - port: 5672
    name: amqp
  - port: 15672
    name: management
  selector:
    app: msa-rabbitmq
---
# msa-rabbitmq StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: msa-rabbitmq
spec:
  replicas: 1
  serviceName: msa-rabbitmq
  selector:
    matchLabels:
      app: msa-rabbitmq
  template:
    metadata:
      labels:
        app: msa-rabbitmq
    spec:
      containers:
      - name: msa-rabbitmq
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: RABBITMQ_DEFAULT_USER
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: RABBITMQ_DEFAULT_PASS
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
        livenessProbe:
            httpGet:
              path: /
              port: 15672
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 10
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: msa-rabbitmq-pvc